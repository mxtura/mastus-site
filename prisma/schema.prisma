// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider   = "prisma-client-js"
  engineType = "node-api"
}

datasource db {
  // Switched from PostgreSQL to MySQL
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Пользователи (администраторы)
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String?  
  role      Role     @default(ADMIN)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  ADMIN
  SUPER_ADMIN
}

// Продукты
model Product {
  id          String   @id @default(cuid())
  name        String
  description String?
  // Связь с категорией (вместо enum)
  categoryId  String
  category    Category  @relation(fields: [categoryId], references: [id])
  
  // Технические характеристики
  // Доп. произвольные параметры (код -> значение), для новых параметров
  attributes  Json?
  
  // Дополнительные поля
  // Stored as JSON arrays for MySQL (no native array type)
  advantages  Json? // преимущества (array of strings)
  applications Json? // области применения (array of strings)
  price       Float?   // цена
  isActive    Boolean  @default(true)
  
  // Изображения
  images      Json? // URLs изображений (array of strings)
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// Категории продуктов с кодом и названием на русском
model Category {
  id        String    @id @default(cuid())
  code      String    @unique // например: MANHOLES, SUPPORT_RINGS, LADDERS
  nameRu    String    // русское название
  products  Product[]
  params    CategoryParam[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

// Справочник возможных параметров товара
model Parameter {
  id        String           @id @default(cuid())
  code      String           @unique
  nameRu    String
  categories CategoryParam[]
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
}

// Параметры, назначенные конкретной категории, с флагами
model CategoryParam {
  id          String    @id @default(cuid())
  categoryId  String
  parameterId String
  visible     Boolean   @default(true)
  required    Boolean   @default(false)

  category    Category  @relation(fields: [categoryId], references: [id])
  parameter   Parameter @relation(fields: [parameterId], references: [id])

  @@unique([categoryId, parameterId])
}

// Обращения с сайта
model ContactMessage {
  id       String             @id @default(cuid())
  name     String
  company  String?
  phone    String
  email    String
  subject  ContactSubject?
  message  String
  status   MessageStatus     @default(NEW)
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum ContactSubject {
  PRICE     // запрос цены
  ORDER     // размещение заказа
  DELIVERY  // доставка
  TECHNICAL // техническая консультация
  OTHER     // другое
}

enum MessageStatus {
  NEW       // новое
  PROCESSING // в обработке
  COMPLETED  // обработано
  ARCHIVED   // архив
}

// Редактируемый контент страниц
model ContentPage {
  id        String           @id @default(cuid())
  page      ContentPageType  @unique
  data      Json
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
}

enum ContentPageType {
  HOME
  CONTACTS
  ABOUT
}
